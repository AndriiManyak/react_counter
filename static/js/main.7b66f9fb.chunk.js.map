{"version":3,"sources":["components/Counter/Counter.js","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","type","onClick","App","state","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACrB,oCACE,6CAAeH,IACf,4BAAQI,KAAK,SAASC,QAASJ,GAA/B,UAIA,4BAAQG,KAAK,SAASC,QAASH,GAA/B,UAIA,4BAAQE,KAAK,SAASC,QAASF,GAA/B,eC2BWG,E,4MApCbC,MAAQ,CACNP,MAAO,G,EAGTC,OAAS,WACP,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAAET,MAAOS,EAAUT,MAAQ,O,EAGzDE,OAAS,WACP,EAAKM,UAAS,SAAAC,GAAS,MAAK,CAAET,MAAOS,EAAUT,MAAQ,S,EAGzDG,SAAW,WACL,EAAKI,MAAMP,MAAQ,IAAM,GAC3B,EAAKE,SAGP,EAAKD,U,uDAGG,IACAD,EAAUU,KAAKH,MAAfP,MAER,OACE,oCACE,kBAAC,EAAD,CACEA,MAAOA,EACPC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,gB,GA9BPQ,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7b66f9fb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ count, addOne, add100, increase }) => (\n  <>\n    <h1>{`Count: ${count}`}</h1>\n    <button type=\"button\" onClick={addOne}>\n      addOne\n    </button>\n\n    <button type=\"button\" onClick={add100}>\n      add100\n    </button>\n\n    <button type=\"button\" onClick={increase}>\n      increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(prevState => ({ count: prevState.count + 1 }));\n  };\n\n  add100 = () => {\n    this.setState(prevState => ({ count: prevState.count + 100 }));\n  };\n\n  increase = () => {\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <>\n        <Counter\n          count={count}\n          addOne={this.addOne}\n          add100={this.add100}\n          increase={this.increase}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}